{"ast":null,"code":"import { Subject, fromEvent, merge } from 'rxjs';\nimport { auditTime, takeUntil, distinctUntilChanged, mapTo } from 'rxjs/operators';\nimport { InjectionToken, EventEmitter, Directive, NgZone, KeyValueDiffers, ElementRef, Inject, PLATFORM_ID, Optional, Input, Output, Component, ViewEncapsulation, ChangeDetectorRef, HostBinding, ViewChild, Renderer2, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction PerfectScrollbarComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelement(1, \"div\", 4)(2, \"div\", 5)(3, \"div\", 6)(4, \"div\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"ps-at-top\", ctx_r0.states.top)(\"ps-at-left\", ctx_r0.states.left)(\"ps-at-right\", ctx_r0.states.right)(\"ps-at-bottom\", ctx_r0.states.bottom);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r0.indicatorY && ctx_r0.interaction);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r0.indicatorX && ctx_r0.interaction);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r0.indicatorX && ctx_r0.interaction);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"ps-indicator-show\", ctx_r0.indicatorY && ctx_r0.interaction);\n  }\n}\n\nconst _c0 = [\"*\"];\nconst PERFECT_SCROLLBAR_CONFIG = new InjectionToken('PERFECT_SCROLLBAR_CONFIG');\n\nclass Geometry {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n\n}\n\nclass Position {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n}\n\nconst PerfectScrollbarEvents = ['psScrollY', 'psScrollX', 'psScrollUp', 'psScrollDown', 'psScrollLeft', 'psScrollRight', 'psYReachEnd', 'psYReachStart', 'psXReachEnd', 'psXReachStart'];\n\nclass PerfectScrollbarConfig {\n  constructor(config = {}) {\n    this.assign(config);\n  }\n\n  assign(config = {}) {\n    for (const key in config) {\n      this[key] = config[key];\n    }\n  }\n\n}\n\nlet PerfectScrollbarDirective = /*#__PURE__*/(() => {\n  class PerfectScrollbarDirective {\n    constructor(zone, differs, elementRef, platformId, defaults) {\n      this.zone = zone;\n      this.differs = differs;\n      this.elementRef = elementRef;\n      this.platformId = platformId;\n      this.defaults = defaults;\n      this.instance = null;\n      this.ro = null;\n      this.timeout = null;\n      this.animation = null;\n      this.configDiff = null;\n      this.ngDestroy = new Subject();\n      this.disabled = false;\n      this.psScrollY = new EventEmitter();\n      this.psScrollX = new EventEmitter();\n      this.psScrollUp = new EventEmitter();\n      this.psScrollDown = new EventEmitter();\n      this.psScrollLeft = new EventEmitter();\n      this.psScrollRight = new EventEmitter();\n      this.psYReachEnd = new EventEmitter();\n      this.psYReachStart = new EventEmitter();\n      this.psXReachEnd = new EventEmitter();\n      this.psXReachStart = new EventEmitter();\n    }\n\n    ngOnInit() {\n      if (!this.disabled && isPlatformBrowser(this.platformId)) {\n        const config = new PerfectScrollbarConfig(this.defaults);\n        config.assign(this.config); // Custom configuration\n\n        this.zone.runOutsideAngular(() => {\n          this.instance = new PerfectScrollbar(this.elementRef.nativeElement, config);\n        });\n\n        if (!this.configDiff) {\n          this.configDiff = this.differs.find(this.config || {}).create();\n          this.configDiff.diff(this.config || {});\n        }\n\n        this.zone.runOutsideAngular(() => {\n          this.ro = new ResizeObserver(() => {\n            this.update();\n          });\n\n          if (this.elementRef.nativeElement.children[0]) {\n            this.ro.observe(this.elementRef.nativeElement.children[0]);\n          }\n\n          this.ro.observe(this.elementRef.nativeElement);\n        });\n        this.zone.runOutsideAngular(() => {\n          PerfectScrollbarEvents.forEach(eventName => {\n            const eventType = eventName.replace(/([A-Z])/g, c => `-${c.toLowerCase()}`);\n            fromEvent(this.elementRef.nativeElement, eventType).pipe(auditTime(20), takeUntil(this.ngDestroy)).subscribe(event => {\n              this[eventName].emit(event);\n            });\n          });\n        });\n      }\n    }\n\n    ngOnDestroy() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.ngDestroy.next();\n        this.ngDestroy.complete();\n\n        if (this.ro) {\n          this.ro.disconnect();\n        }\n\n        if (this.timeout && typeof window !== 'undefined') {\n          window.clearTimeout(this.timeout);\n        }\n\n        this.zone.runOutsideAngular(() => {\n          if (this.instance) {\n            this.instance.destroy();\n          }\n        });\n        this.instance = null;\n      }\n    }\n\n    ngDoCheck() {\n      if (!this.disabled && this.configDiff && isPlatformBrowser(this.platformId)) {\n        const changes = this.configDiff.diff(this.config || {});\n\n        if (changes) {\n          this.ngOnDestroy();\n          this.ngOnInit();\n        }\n      }\n    }\n\n    ngOnChanges(changes) {\n      if (changes['disabled'] && !changes['disabled'].isFirstChange() && isPlatformBrowser(this.platformId)) {\n        if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n          if (changes['disabled'].currentValue === true) {\n            this.ngOnDestroy();\n          } else if (changes['disabled'].currentValue === false) {\n            this.ngOnInit();\n          }\n        }\n      }\n    }\n\n    ps() {\n      return this.instance;\n    }\n\n    update() {\n      if (typeof window !== 'undefined') {\n        if (this.timeout) {\n          window.clearTimeout(this.timeout);\n        }\n\n        this.timeout = window.setTimeout(() => {\n          if (!this.disabled && this.configDiff) {\n            try {\n              this.zone.runOutsideAngular(() => {\n                if (this.instance) {\n                  this.instance.update();\n                }\n              });\n            } catch (error) {// Update can be finished after destroy so catch errors\n            }\n          }\n        }, 0);\n      }\n    }\n\n    geometry(prefix = 'scroll') {\n      return new Geometry(this.elementRef.nativeElement[prefix + 'Left'], this.elementRef.nativeElement[prefix + 'Top'], this.elementRef.nativeElement[prefix + 'Width'], this.elementRef.nativeElement[prefix + 'Height']);\n    }\n\n    position(absolute = false) {\n      if (!absolute && this.instance) {\n        return new Position(this.instance.reach.x || 0, this.instance.reach.y || 0);\n      } else {\n        return new Position(this.elementRef.nativeElement.scrollLeft, this.elementRef.nativeElement.scrollTop);\n      }\n    }\n\n    scrollable(direction = 'any') {\n      const element = this.elementRef.nativeElement;\n\n      if (direction === 'any') {\n        return element.classList.contains('ps--active-x') || element.classList.contains('ps--active-y');\n      } else if (direction === 'both') {\n        return element.classList.contains('ps--active-x') && element.classList.contains('ps--active-y');\n      } else {\n        return element.classList.contains('ps--active-' + direction);\n      }\n    }\n\n    scrollTo(x, y, speed) {\n      if (!this.disabled) {\n        if (y == null && speed == null) {\n          this.animateScrolling('scrollTop', x, speed);\n        } else {\n          if (x != null) {\n            this.animateScrolling('scrollLeft', x, speed);\n          }\n\n          if (y != null) {\n            this.animateScrolling('scrollTop', y, speed);\n          }\n        }\n      }\n    }\n\n    scrollToX(x, speed) {\n      this.animateScrolling('scrollLeft', x, speed);\n    }\n\n    scrollToY(y, speed) {\n      this.animateScrolling('scrollTop', y, speed);\n    }\n\n    scrollToTop(offset, speed) {\n      this.animateScrolling('scrollTop', offset || 0, speed);\n    }\n\n    scrollToLeft(offset, speed) {\n      this.animateScrolling('scrollLeft', offset || 0, speed);\n    }\n\n    scrollToRight(offset, speed) {\n      const left = this.elementRef.nativeElement.scrollWidth - this.elementRef.nativeElement.clientWidth;\n      this.animateScrolling('scrollLeft', left - (offset || 0), speed);\n    }\n\n    scrollToBottom(offset, speed) {\n      const top = this.elementRef.nativeElement.scrollHeight - this.elementRef.nativeElement.clientHeight;\n      this.animateScrolling('scrollTop', top - (offset || 0), speed);\n    }\n\n    scrollToElement(element, offset, speed) {\n      if (typeof element === 'string') {\n        element = this.elementRef.nativeElement.querySelector(element);\n      }\n\n      if (element) {\n        const elementPos = element.getBoundingClientRect();\n        const scrollerPos = this.elementRef.nativeElement.getBoundingClientRect();\n\n        if (this.elementRef.nativeElement.classList.contains('ps--active-x')) {\n          const currentPos = this.elementRef.nativeElement['scrollLeft'];\n          const position = elementPos.left - scrollerPos.left + currentPos;\n          this.animateScrolling('scrollLeft', position + (offset || 0), speed);\n        }\n\n        if (this.elementRef.nativeElement.classList.contains('ps--active-y')) {\n          const currentPos = this.elementRef.nativeElement['scrollTop'];\n          const position = elementPos.top - scrollerPos.top + currentPos;\n          this.animateScrolling('scrollTop', position + (offset || 0), speed);\n        }\n      }\n    }\n\n    animateScrolling(target, value, speed) {\n      if (this.animation) {\n        window.cancelAnimationFrame(this.animation);\n        this.animation = null;\n      }\n\n      if (!speed || typeof window === 'undefined') {\n        this.elementRef.nativeElement[target] = value;\n      } else if (value !== this.elementRef.nativeElement[target]) {\n        let newValue = 0;\n        let scrollCount = 0;\n        let oldTimestamp = performance.now();\n        let oldValue = this.elementRef.nativeElement[target];\n        const cosParameter = (oldValue - value) / 2;\n\n        const step = newTimestamp => {\n          scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\n          newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount)); // Only continue animation if scroll position has not changed\n\n          if (this.elementRef.nativeElement[target] === oldValue) {\n            if (scrollCount >= Math.PI) {\n              this.animateScrolling(target, value, 0);\n            } else {\n              this.elementRef.nativeElement[target] = newValue; // On a zoomed out page the resulting offset may differ\n\n              oldValue = this.elementRef.nativeElement[target];\n              oldTimestamp = newTimestamp;\n              this.animation = window.requestAnimationFrame(step);\n            }\n          }\n        };\n\n        window.requestAnimationFrame(step);\n      }\n    }\n\n  }\n\n  PerfectScrollbarDirective.ɵfac = function PerfectScrollbarDirective_Factory(t) {\n    return new (t || PerfectScrollbarDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(PERFECT_SCROLLBAR_CONFIG, 8));\n  };\n\n  PerfectScrollbarDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: PerfectScrollbarDirective,\n    selectors: [[\"\", \"perfectScrollbar\", \"\"]],\n    inputs: {\n      disabled: \"disabled\",\n      config: [\"perfectScrollbar\", \"config\"]\n    },\n    outputs: {\n      psScrollY: \"psScrollY\",\n      psScrollX: \"psScrollX\",\n      psScrollUp: \"psScrollUp\",\n      psScrollDown: \"psScrollDown\",\n      psScrollLeft: \"psScrollLeft\",\n      psScrollRight: \"psScrollRight\",\n      psYReachEnd: \"psYReachEnd\",\n      psYReachStart: \"psYReachStart\",\n      psXReachEnd: \"psXReachEnd\",\n      psXReachStart: \"psXReachStart\"\n    },\n    exportAs: [\"ngxPerfectScrollbar\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return PerfectScrollbarDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PerfectScrollbarComponent = /*#__PURE__*/(() => {\n  class PerfectScrollbarComponent {\n    constructor(zone, cdRef, platformId) {\n      this.zone = zone;\n      this.cdRef = cdRef;\n      this.platformId = platformId;\n      this.states = {};\n      this.indicatorX = false;\n      this.indicatorY = false;\n      this.interaction = false;\n      this.scrollPositionX = 0;\n      this.scrollPositionY = 0;\n      this.scrollDirectionX = 0;\n      this.scrollDirectionY = 0;\n      this.usePropagationX = false;\n      this.usePropagationY = false;\n      this.allowPropagationX = false;\n      this.allowPropagationY = false;\n      this.stateTimeout = null;\n      this.ngDestroy = new Subject();\n      this.stateUpdate = new Subject();\n      this.disabled = false;\n      this.usePSClass = true;\n      this.autoPropagation = false;\n      this.scrollIndicators = false;\n      this.psScrollY = new EventEmitter();\n      this.psScrollX = new EventEmitter();\n      this.psScrollUp = new EventEmitter();\n      this.psScrollDown = new EventEmitter();\n      this.psScrollLeft = new EventEmitter();\n      this.psScrollRight = new EventEmitter();\n      this.psYReachEnd = new EventEmitter();\n      this.psYReachStart = new EventEmitter();\n      this.psXReachEnd = new EventEmitter();\n      this.psXReachStart = new EventEmitter();\n    }\n\n    ngOnInit() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.stateUpdate.pipe(takeUntil(this.ngDestroy), distinctUntilChanged((a, b) => a === b && !this.stateTimeout)).subscribe(state => {\n          if (this.stateTimeout && typeof window !== 'undefined') {\n            window.clearTimeout(this.stateTimeout);\n            this.stateTimeout = null;\n          }\n\n          if (state === 'x' || state === 'y') {\n            this.interaction = false;\n\n            if (state === 'x') {\n              this.indicatorX = false;\n              this.states.left = false;\n              this.states.right = false;\n\n              if (this.autoPropagation && this.usePropagationX) {\n                this.allowPropagationX = false;\n              }\n            } else if (state === 'y') {\n              this.indicatorY = false;\n              this.states.top = false;\n              this.states.bottom = false;\n\n              if (this.autoPropagation && this.usePropagationY) {\n                this.allowPropagationY = false;\n              }\n            }\n          } else {\n            if (state === 'left' || state === 'right') {\n              this.states.left = false;\n              this.states.right = false;\n              this.states[state] = true;\n\n              if (this.autoPropagation && this.usePropagationX) {\n                this.indicatorX = true;\n              }\n            } else if (state === 'top' || state === 'bottom') {\n              this.states.top = false;\n              this.states.bottom = false;\n              this.states[state] = true;\n\n              if (this.autoPropagation && this.usePropagationY) {\n                this.indicatorY = true;\n              }\n            }\n\n            if (this.autoPropagation && typeof window !== 'undefined') {\n              this.stateTimeout = window.setTimeout(() => {\n                this.indicatorX = false;\n                this.indicatorY = false;\n                this.stateTimeout = null;\n\n                if (this.interaction && (this.states.left || this.states.right)) {\n                  this.allowPropagationX = true;\n                }\n\n                if (this.interaction && (this.states.top || this.states.bottom)) {\n                  this.allowPropagationY = true;\n                }\n\n                this.cdRef.markForCheck();\n              }, 500);\n            }\n          }\n\n          this.cdRef.markForCheck();\n          this.cdRef.detectChanges();\n        });\n        this.zone.runOutsideAngular(() => {\n          if (this.directiveRef) {\n            const element = this.directiveRef.elementRef.nativeElement;\n            fromEvent(element, 'wheel').pipe(takeUntil(this.ngDestroy)).subscribe(event => {\n              if (!this.disabled && this.autoPropagation) {\n                const scrollDeltaX = event.deltaX;\n                const scrollDeltaY = event.deltaY;\n                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\n              }\n            });\n            fromEvent(element, 'touchmove').pipe(takeUntil(this.ngDestroy)).subscribe(event => {\n              if (!this.disabled && this.autoPropagation) {\n                const scrollPositionX = event.touches[0].clientX;\n                const scrollPositionY = event.touches[0].clientY;\n                const scrollDeltaX = scrollPositionX - this.scrollPositionX;\n                const scrollDeltaY = scrollPositionY - this.scrollPositionY;\n                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\n                this.scrollPositionX = scrollPositionX;\n                this.scrollPositionY = scrollPositionY;\n              }\n            });\n            merge(fromEvent(element, 'ps-scroll-x').pipe(mapTo('x')), fromEvent(element, 'ps-scroll-y').pipe(mapTo('y')), fromEvent(element, 'ps-x-reach-end').pipe(mapTo('right')), fromEvent(element, 'ps-y-reach-end').pipe(mapTo('bottom')), fromEvent(element, 'ps-x-reach-start').pipe(mapTo('left')), fromEvent(element, 'ps-y-reach-start').pipe(mapTo('top'))).pipe(takeUntil(this.ngDestroy)).subscribe(state => {\n              if (!this.disabled && (this.autoPropagation || this.scrollIndicators)) {\n                this.stateUpdate.next(state);\n              }\n            });\n          }\n        });\n        window.setTimeout(() => {\n          PerfectScrollbarEvents.forEach(eventName => {\n            if (this.directiveRef) {\n              this.directiveRef[eventName] = this[eventName];\n            }\n          });\n        }, 0);\n      }\n    }\n\n    ngOnDestroy() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.ngDestroy.next();\n        this.ngDestroy.unsubscribe();\n\n        if (this.stateTimeout && typeof window !== 'undefined') {\n          window.clearTimeout(this.stateTimeout);\n        }\n      }\n    }\n\n    ngDoCheck() {\n      if (isPlatformBrowser(this.platformId)) {\n        if (!this.disabled && this.autoPropagation && this.directiveRef) {\n          const element = this.directiveRef.elementRef.nativeElement;\n          this.usePropagationX = element.classList.contains('ps--active-x');\n          this.usePropagationY = element.classList.contains('ps--active-y');\n        }\n      }\n    }\n\n    checkPropagation(event, deltaX, deltaY) {\n      this.interaction = true;\n      const scrollDirectionX = deltaX < 0 ? -1 : 1;\n      const scrollDirectionY = deltaY < 0 ? -1 : 1;\n\n      if (this.usePropagationX && this.usePropagationY || this.usePropagationX && (!this.allowPropagationX || this.scrollDirectionX !== scrollDirectionX) || this.usePropagationY && (!this.allowPropagationY || this.scrollDirectionY !== scrollDirectionY)) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      if (!!deltaX) {\n        this.scrollDirectionX = scrollDirectionX;\n      }\n\n      if (!!deltaY) {\n        this.scrollDirectionY = scrollDirectionY;\n      }\n\n      this.stateUpdate.next('interaction');\n      this.cdRef.detectChanges();\n    }\n\n  }\n\n  PerfectScrollbarComponent.ɵfac = function PerfectScrollbarComponent_Factory(t) {\n    return new (t || PerfectScrollbarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n\n  PerfectScrollbarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: PerfectScrollbarComponent,\n    selectors: [[\"perfect-scrollbar\"]],\n    viewQuery: function PerfectScrollbarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PerfectScrollbarDirective, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.directiveRef = _t.first);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function PerfectScrollbarComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ps-show-limits\", ctx.autoPropagation)(\"ps-show-active\", ctx.scrollIndicators);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      usePSClass: \"usePSClass\",\n      autoPropagation: \"autoPropagation\",\n      scrollIndicators: \"scrollIndicators\",\n      config: \"config\"\n    },\n    outputs: {\n      psScrollY: \"psScrollY\",\n      psScrollX: \"psScrollX\",\n      psScrollUp: \"psScrollUp\",\n      psScrollDown: \"psScrollDown\",\n      psScrollLeft: \"psScrollLeft\",\n      psScrollRight: \"psScrollRight\",\n      psYReachEnd: \"psYReachEnd\",\n      psYReachStart: \"psYReachStart\",\n      psXReachEnd: \"psXReachEnd\",\n      psXReachStart: \"psXReachStart\"\n    },\n    exportAs: [\"ngxPerfectScrollbar\"],\n    ngContentSelectors: _c0,\n    decls: 4,\n    vars: 5,\n    consts: [[2, \"position\", \"static\", 3, \"perfectScrollbar\", \"disabled\"], [1, \"ps-content\"], [\"class\", \"ps-overlay\", 3, \"ps-at-top\", \"ps-at-left\", \"ps-at-right\", \"ps-at-bottom\", 4, \"ngIf\"], [1, \"ps-overlay\"], [1, \"ps-indicator-top\"], [1, \"ps-indicator-left\"], [1, \"ps-indicator-right\"], [1, \"ps-indicator-bottom\"]],\n    template: function PerfectScrollbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, PerfectScrollbarComponent_div_3_Template, 5, 16, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"ps\", ctx.usePSClass);\n        ɵngcc0.ɵɵproperty(\"perfectScrollbar\", ctx.config)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.scrollIndicators);\n      }\n    },\n    dependencies: [ɵngcc1.NgIf, PerfectScrollbarDirective],\n    styles: [\"perfect-scrollbar{display:block;height:100%;max-height:100%;max-width:100%;overflow:hidden;position:relative;width:100%}perfect-scrollbar[hidden]{display:none}perfect-scrollbar[fxflex]{display:flex;flex-direction:column;height:auto;min-height:0;min-width:0}perfect-scrollbar[fxflex]>.ps{-webkit-box-flex:1;flex:1 1 auto;height:auto;min-height:0;min-width:0;width:auto}perfect-scrollbar[fxlayout]>.ps,perfect-scrollbar[fxlayout]>.ps>.ps-content{-webkit-box-align:inherit;-webkit-box-flex:1;-webkit-box-pack:inherit;align-content:inherit;align-items:inherit;display:flex;flex:1 1 auto;flex-direction:inherit;height:100%;justify-content:inherit;width:100%},perfect-scrollbar[fxlayout=row]>.ps,perfect-scrollbar[fxlayout=row]>.ps>.ps-content{flex-direction:row!important}perfect-scrollbar[fxlayout=column]>.ps,perfect-scrollbar[fxlayout=column]>.ps>.ps-content{flex-direction:column!important}perfect-scrollbar>.ps{display:block;height:100%;max-height:100%;max-width:100%;position:static;width:100%}perfect-scrollbar>.ps textarea{-ms-overflow-style:scrollbar}perfect-scrollbar>.ps>.ps-overlay{bottom:0;display:block;left:0;overflow:hidden;pointer-events:none;position:absolute;right:0;top:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-bottom,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-left,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-right,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-top{opacity:0;position:absolute;transition:opacity .3s ease-in-out}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-bottom,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-top{left:0;min-height:24px;min-width:100%}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-left,perfect-scrollbar>.ps>.ps-overlay .ps-indicator-right{min-height:100%;min-width:24px;top:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-top{top:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-left{left:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-right{right:0}perfect-scrollbar>.ps>.ps-overlay .ps-indicator-bottom{bottom:0}perfect-scrollbar>.ps.ps--active-y>.ps__rail-y{cursor:default;left:auto!important;right:0!important;top:0!important;transition:width .2s linear,opacity .2s linear,background-color .2s linear;width:10px}perfect-scrollbar>.ps.ps--active-y>.ps__rail-y.ps--clicking,perfect-scrollbar>.ps.ps--active-y>.ps__rail-y:hover{width:15px}perfect-scrollbar>.ps.ps--active-x>.ps__rail-x{bottom:0!important;cursor:default;height:10px;left:0!important;top:auto!important;transition:height .2s linear,opacity .2s linear,background-color .2s linear}perfect-scrollbar>.ps.ps--active-x>.ps__rail-x.ps--clicking,perfect-scrollbar>.ps.ps--active-x>.ps__rail-x:hover{height:15px}perfect-scrollbar>.ps.ps--active-x.ps--active-y>.ps__rail-y{margin:0 0 10px}perfect-scrollbar>.ps.ps--active-x.ps--active-y>.ps__rail-x{margin:0 10px 0 0}perfect-scrollbar>.ps.ps--scrolling-x>.ps__rail-x,perfect-scrollbar>.ps.ps--scrolling-y>.ps__rail-y{background-color:#eee;opacity:.9}perfect-scrollbar.ps-show-always>.ps.ps--active-x>.ps__rail-x,perfect-scrollbar.ps-show-always>.ps.ps--active-y>.ps__rail-y{opacity:.6}perfect-scrollbar.ps-show-active>.ps.ps--active-y>.ps-overlay:not(.ps-at-top) .ps-indicator-top{background:linear-gradient(180deg,hsla(0,0%,100%,.5) 0,hsla(0,0%,100%,0));opacity:1}perfect-scrollbar.ps-show-active>.ps.ps--active-y>.ps-overlay:not(.ps-at-bottom) .ps-indicator-bottom{background:linear-gradient(0deg,hsla(0,0%,100%,.5) 0,hsla(0,0%,100%,0));opacity:1}perfect-scrollbar.ps-show-active>.ps.ps--active-x>.ps-overlay:not(.ps-at-left) .ps-indicator-left{background:linear-gradient(90deg,hsla(0,0%,100%,.5) 0,hsla(0,0%,100%,0));opacity:1}perfect-scrollbar.ps-show-active>.ps.ps--active-x>.ps-overlay:not(.ps-at-right) .ps-indicator-right{background:linear-gradient(270deg,hsla(0,0%,100%,.5) 0,hsla(0,0%,100%,0));opacity:1}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-top .ps-indicator-top{background:linear-gradient(180deg,hsla(0,0%,66.7%,.5) 0,hsla(0,0%,66.7%,0))}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-bottom .ps-indicator-bottom{background:linear-gradient(0deg,hsla(0,0%,66.7%,.5) 0,hsla(0,0%,66.7%,0))}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-left .ps-indicator-left{background:linear-gradient(90deg,hsla(0,0%,66.7%,.5) 0,hsla(0,0%,66.7%,0))}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-right .ps-indicator-right{background:linear-gradient(270deg,hsla(0,0%,66.7%,.5) 0,hsla(0,0%,66.7%,0))}perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-left .ps-indicator-left.ps-indicator-show,perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-x>.ps-overlay.ps-at-right .ps-indicator-right.ps-indicator-show,perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-bottom .ps-indicator-bottom.ps-indicator-show,perfect-scrollbar.ps-show-active.ps-show-limits>.ps.ps--active-y>.ps-overlay.ps-at-top .ps-indicator-top.ps-indicator-show{opacity:1}\", \".ps{-ms-overflow-style:none;-ms-touch-action:auto;overflow:hidden!important;overflow-anchor:none;touch-action:auto}.ps__rail-x{bottom:0;height:15px}.ps__rail-x,.ps__rail-y{-webkit-transition:background-color .2s linear,opacity .2s linear;display:none;opacity:0;position:absolute;transition:background-color .2s linear,opacity .2s linear}.ps__rail-y{right:0;width:15px}.ps--active-x>.ps__rail-x,.ps--active-y>.ps__rail-y{background-color:transparent;display:block}.ps--focus>.ps__rail-x,.ps--focus>.ps__rail-y,.ps--scrolling-x>.ps__rail-x,.ps--scrolling-y>.ps__rail-y,.ps:hover>.ps__rail-x,.ps:hover>.ps__rail-y{opacity:.6}.ps .ps__rail-x.ps--clicking,.ps .ps__rail-x:focus,.ps .ps__rail-x:hover,.ps .ps__rail-y.ps--clicking,.ps .ps__rail-y:focus,.ps .ps__rail-y:hover{background-color:#eee;opacity:.9}.ps__thumb-x{-webkit-transition:background-color .2s linear,height .2s ease-in-out;bottom:2px;height:6px;transition:background-color .2s linear,height .2s ease-in-out}.ps__thumb-x,.ps__thumb-y{background-color:#aaa;border-radius:6px;position:absolute}.ps__thumb-y{-webkit-transition:background-color .2s linear,width .2s ease-in-out;right:2px;transition:background-color .2s linear,width .2s ease-in-out;width:6px}.ps__rail-x.ps--clicking .ps__thumb-x,.ps__rail-x:focus>.ps__thumb-x,.ps__rail-x:hover>.ps__thumb-x{background-color:#999;height:11px}.ps__rail-y.ps--clicking .ps__thumb-y,.ps__rail-y:focus>.ps__thumb-y,.ps__rail-y:hover>.ps__thumb-y{background-color:#999;width:11px}@supports (-ms-overflow-style:none){.ps{overflow:auto!important}}@media (-ms-high-contrast:none),screen and (-ms-high-contrast:active){.ps{overflow:auto!important}}\"],\n    encapsulation: 2\n  });\n  return PerfectScrollbarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet ForceNativeScrollDirective = /*#__PURE__*/(() => {\n  class ForceNativeScrollDirective {\n    constructor(renderer, el) {\n      this.renderer = renderer;\n      ['ps__child', 'ps__child--consume'].forEach(className => {\n        this.renderer.addClass(el === null || el === void 0 ? void 0 : el.nativeElement, className);\n      });\n    }\n\n  }\n\n  ForceNativeScrollDirective.ɵfac = function ForceNativeScrollDirective_Factory(t) {\n    return new (t || ForceNativeScrollDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  ForceNativeScrollDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: ForceNativeScrollDirective,\n    selectors: [[\"\", \"forceNativeScrolling\", \"\"]]\n  });\n  return ForceNativeScrollDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet PerfectScrollbarModule = /*#__PURE__*/(() => {\n  class PerfectScrollbarModule {}\n\n  PerfectScrollbarModule.ɵfac = function PerfectScrollbarModule_Factory(t) {\n    return new (t || PerfectScrollbarModule)();\n  };\n\n  PerfectScrollbarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: PerfectScrollbarModule\n  });\n  PerfectScrollbarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule, CommonModule]\n  });\n  return PerfectScrollbarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PerfectScrollbarModule, {\n    declarations: function () {\n      return [PerfectScrollbarComponent, PerfectScrollbarDirective, ForceNativeScrollDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [CommonModule, PerfectScrollbarComponent, PerfectScrollbarDirective, ForceNativeScrollDirective];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Geometry, PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarComponent, PerfectScrollbarConfig, PerfectScrollbarDirective, PerfectScrollbarModule, Position, ForceNativeScrollDirective as ɵa }; //# sourceMappingURL=ngx-perfect-scrollbar.js.map","map":null,"metadata":{},"sourceType":"module"}